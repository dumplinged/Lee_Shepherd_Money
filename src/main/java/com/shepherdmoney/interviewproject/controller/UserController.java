package com.shepherdmoney.interviewproject.controller;
import com.shepherdmoney.interviewproject.model.User;

import com.shepherdmoney.interviewproject.repository.UserRepository;
import com.shepherdmoney.interviewproject.vo.request.CreateUserPayload;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
public class UserController {

    @Autowired
    private UserRepository userRepository;

    @PutMapping("/user")
    public ResponseEntity<Integer> createUser(@RequestBody CreateUserPayload payload) {
        // Here we just call the no-arg constructor of User and set the information accordingly
        // using the information from the payload's body. No need to set the id field, this is
        // autogenerated. We then save the user into the userRepo so that it can be accessed on the
        // h2 console and return the wrapped Integer id to the postman.
        User user = new User();
        user.setEmail(payload.getEmail());
        user.setName(payload.getName());
        userRepository.save(user);
        return new ResponseEntity<>(user.getId(), HttpStatus.OK);
    }

    @DeleteMapping("/user")
    public ResponseEntity<String> deleteUser(@RequestParam int userId) {
        // I just made the ResponseEntity hold a simple string. We look for user by searching the userRepo
        // with findById using the passed in userId. If we can't find a corresponding user, we send the BAD_REQUEST
        // status with a short description, and we send in the OK status if we deleted successfully.
        Optional<User> user = userRepository.findById(userId);
        if (user.isEmpty()) {
            return new ResponseEntity<>("UserID does not exist", HttpStatus.BAD_REQUEST);
        }
        userRepository.deleteById(userId);
        return new ResponseEntity<>("Deletion successful", HttpStatus.OK);
    }
}
